CREATE OR REPLACE PROCEDURE DEHTGEMO.SP_SIMULADORFR_CALC(
    p_PETIPDOC_U              IN VARCHAR2,
    p_PENUMDOC_U              IN VARCHAR2,
    p_CARTERA_U               IN NUMBER,
    p_MONE_CARTERA            IN VARCHAR2,
    p_GTIA_FINANCIERA_U       IN NUMBER,
    p_MONE_GTIA_FINANCIERA    IN VARCHAR2,
    p_GTIA_TECNICA_U          IN NUMBER,
    p_MONE_GTIA_TECNICA       IN VARCHAR2,
    p_DERIVADOS_U             IN NUMBER,
    p_MONE_DERIVADOS          IN VARCHAR2,
    p_COD_GARANTIA_U          IN t_cod_garantia,
    p_VR_GARANTIA_U           IN t_valor_garantia,
    p_MONE_VR_GARANTIA        IN t_moneda_garantia,
    -- Control de cómo aplicar los deltas del usuario:
    -- 'NINGUNO' (default) -> no aplica deltas a ningún grupo
    -- 'TODOS'             -> aplica los deltas a todos los grupos del PENUMDOC
    p_APLICAR_DELTAS_MODE     IN VARCHAR2 DEFAULT 'NINGUNO'
) AS
    -- Deltas convertidos + parametría
    R_CARTERA             NUMBER(18,2) := 0;
    R_GTIA_TECNICA        NUMBER(18,2) := 0;
    R_GTIA_FINANCIERA     NUMBER(18,2) := 0;
    R_DERIVADOS           NUMBER(18,2) := 0;
    R_GARANTIAS_DELTA     NUMBER(18,2) := 0;

    v_rate                NUMBER(18,8);
    v_patrimonio          NUMBER(18,2) := 0;
    v_PENOMPER            VARCHAR2(60);
    v_mode                VARCHAR2(10) := UPPER(NVL(p_APLICAR_DELTAS_MODE,'NINGUNO'));
BEGIN
    -- Limpia resultados previos del documento
    DELETE FROM DEHTGEMO.SIMULADORFR_CALC
    WHERE PENUMDOC = p_PENUMDOC_U;

    -- Nombre del cliente
    SELECT MAX(sg.PENOMPER)
      INTO v_PENOMPER
      FROM DEHTGEMO.SIMULADORFR_GE sg
     WHERE sg.PENUMDOC = p_PENUMDOC_U;

    -- Conversión de monedas y parametría
    IF p_CARTERA_U IS NOT NULL AND p_MONE_CARTERA IS NOT NULL THEN
        SELECT NVL(MAX(CAMBFIX),1) * p_CARTERA_U
          INTO R_CARTERA
          FROM DEHTGEMO.GEM_TASA_CAMBIO
         WHERE CDDIVISS = p_MONE_CARTERA;
        SELECT R_CARTERA * (pe.CARTERA_ORDINARIA/100)
          INTO R_CARTERA
          FROM DEHTGEMO.PARAMETRIA_EXPOSICION pe
         WHERE pe.ESTADO = 1;
    END IF;

    IF p_GTIA_TECNICA_U IS NOT NULL AND p_MONE_GTIA_TECNICA IS NOT NULL THEN
        SELECT NVL(MAX(CAMBFIX),1) * p_GTIA_TECNICA_U
          INTO R_GTIA_TECNICA
          FROM DEHTGEMO.GEM_TASA_CAMBIO
         WHERE CDDIVISS = p_MONE_GTIA_TECNICA;
        SELECT R_GTIA_TECNICA * (pe.GARANTIA_TECNICA/100)
          INTO R_GTIA_TECNICA
          FROM DEHTGEMO.PARAMETRIA_EXPOSICION pe
         WHERE pe.ESTADO = 1;
    END IF;

    IF p_GTIA_FINANCIERA_U IS NOT NULL AND p_MONE_GTIA_FINANCIERA IS NOT NULL THEN
        SELECT NVL(MAX(CAMBFIX),1) * p_GTIA_FINANCIERA_U
          INTO R_GTIA_FINANCIERA
          FROM DEHTGEMO.GEM_TASA_CAMBIO
         WHERE CDDIVISS = p_MONE_GTIA_FINANCIERA;
        SELECT R_GTIA_FINANCIERA * (pe.GARANTIA_FINANCIERA/100)
          INTO R_GTIA_FINANCIERA
          FROM DEHTGEMO.PARAMETRIA_EXPOSICION pe
         WHERE pe.ESTADO = 1;
    END IF;

    IF p_DERIVADOS_U IS NOT NULL AND p_MONE_DERIVADOS IS NOT NULL THEN
        SELECT NVL(MAX(CAMBFIX),1) * p_DERIVADOS_U
          INTO R_DERIVADOS
          FROM DEHTGEMO.GEM_TASA_CAMBIO
         WHERE CDDIVISS = p_MONE_DERIVADOS;
        SELECT R_DERIVADOS * (pe.DERIVADOS/100)
          INTO R_DERIVADOS
          FROM DEHTGEMO.PARAMETRIA_EXPOSICION pe
         WHERE pe.ESTADO = 1;
    END IF;

    -- Loop sobre garantías (no cursor)
    R_GARANTIAS_DELTA := 0;
    IF p_COD_GARANTIA_U IS NOT NULL THEN
        FOR i IN 1 .. p_COD_GARANTIA_U.COUNT LOOP
            IF p_COD_GARANTIA_U(i) IS NOT NULL THEN
                SELECT NVL(MAX(CAMBFIX),1) INTO v_rate
                  FROM DEHTGEMO.GEM_TASA_CAMBIO
                 WHERE CDDIVISS = p_MONE_VR_GARANTIA(i);

                DECLARE
                    v_pdi NUMBER(18,8) := 0;
                    v_fa  NUMBER(18,8) := 0;
                BEGIN
                    SELECT NVL(MAX(pd.PORC_PDI),0) INTO v_pdi
                      FROM DEHTGEMO.PDI pd
                     WHERE pd.COD_GARANTIA = p_COD_GARANTIA_U(i);

                    SELECT NVL(MAX(pro.FA_CAMBIARIO),0) INTO v_fa
                      FROM DEHTGEMO.CALC_VREXPF_OPERACION pro
                     WHERE pro.PENUMDOC = p_PENUMDOC_U;

                    R_GARANTIAS_DELTA := R_GARANTIAS_DELTA
                       + NVL(p_VR_GARANTIA_U(i),0) * v_rate * (1 - v_pdi - v_fa);
                EXCEPTION
                    WHEN NO_DATA_FOUND THEN NULL;
                END;
            END IF;
        END LOOP;
    END IF;

    -- Patrimonio vigente
    SELECT NVL(MAX(PATRIMONIO),0)
      INTO v_patrimonio
      FROM DEHTGEMO.PATR_GE
     WHERE ESTADO = 1;

    -- Inserción set-based: 1 fila por grupo
    INSERT INTO DEHTGEMO.SIMULADORFR_CALC (
        PENUMDOC, PENOMPER, GCC_GROUP_TSI_ID, GCC_GROUP_NAME,
        CARTERA, GTIA_TECNICA, GTIA_FINANCIERA, DERIVADOS,
        PROVISIONES, GARANTIAS, TOTAL_EXPOSICION,
        EXPOSICION_NETA, PORC_CONSUMO
    )
    SELECT
        p_PENUMDOC_U,
        v_PENOMPER,
        g.GCC_GROUP_TSI_ID,
        g.GCC_GROUP_NAME,
        g.CARTERA     + CASE WHEN v_mode = 'TODOS' THEN NVL(R_CARTERA,0) ELSE 0 END,
        g.GTIA_TECNICA+ CASE WHEN v_mode = 'TODOS' THEN NVL(R_GTIA_TECNICA,0) ELSE 0 END,
        g.GTIA_FINANCIERA+ CASE WHEN v_mode = 'TODOS' THEN NVL(R_GTIA_FINANCIERA,0) ELSE 0 END,
        g.DERIVADOS   + CASE WHEN v_mode = 'TODOS' THEN NVL(R_DERIVADOS,0) ELSE 0 END,
        g.PROVISIONES,
        g.GARANTIAS   + CASE WHEN v_mode = 'TODOS' THEN NVL(R_GARANTIAS_DELTA,0) ELSE 0 END,
        (
          (g.CARTERA     + CASE WHEN v_mode = 'TODOS' THEN NVL(R_CARTERA,0) ELSE 0 END)
        + (g.GTIA_TECNICA+ CASE WHEN v_mode = 'TODOS' THEN NVL(R_GTIA_TECNICA,0) ELSE 0 END)
        + (g.GTIA_FINANCIERA+ CASE WHEN v_mode = 'TODOS' THEN NVL(R_GTIA_FINANCIERA,0) ELSE 0 END)
        + (g.DERIVADOS   + CASE WHEN v_mode = 'TODOS' THEN NVL(R_DERIVADOS,0) ELSE 0 END)
        + (g.GARANTIAS   + CASE WHEN v_mode = 'TODOS' THEN NVL(R_GARANTIAS_DELTA,0) ELSE 0 END)
        ) AS TOTAL_EXPOSICION,
        (
          ( (g.CARTERA     + CASE WHEN v_mode = 'TODOS' THEN NVL(R_CARTERA,0) ELSE 0 END)
          + (g.GTIA_TECNICA+ CASE WHEN v_mode = 'TODOS' THEN NVL(R_GTIA_TECNICA,0) ELSE 0 END)
          + (g.GTIA_FINANCIERA+ CASE WHEN v_mode = 'TODOS' THEN NVL(R_GTIA_FINANCIERA,0) ELSE 0 END)
          + (g.DERIVADOS   + CASE WHEN v_mode = 'TODOS' THEN NVL(R_DERIVADOS,0) ELSE 0 END)
          + (g.GARANTIAS   + CASE WHEN v_mode = 'TODOS' THEN NVL(R_GARANTIAS_DELTA,0) ELSE 0 END)
          )
          - g.PROVISIONES
          - (g.GARANTIAS   + CASE WHEN v_mode = 'TODOS' THEN NVL(R_GARANTIAS_DELTA,0) ELSE 0 END)
        ) AS EXPOSICION_NETA,
        CASE WHEN NVL(v_patrimonio,0) > 0 THEN
          ROUND((
            ( (g.CARTERA     + CASE WHEN v_mode = 'TODOS' THEN NVL(R_CARTERA,0) ELSE 0 END)
            + (g.GTIA_TECNICA+ CASE WHEN v_mode = 'TODOS' THEN NVL(R_GTIA_TECNICA,0) ELSE 0 END)
            + (g.GTIA_FINANCIERA+ CASE WHEN v_mode = 'TODOS' THEN NVL(R_GTIA_FINANCIERA,0) ELSE 0 END)
            + (g.DERIVADOS   + CASE WHEN v_mode = 'TODOS' THEN NVL(R_DERIVADOS,0) ELSE 0 END)
            + (g.GARANTIAS   + CASE WHEN v_mode = 'TODOS' THEN NVL(R_GARANTIAS_DELTA,0) ELSE 0 END)
            )
            - g.PROVISIONES
            - (g.GARANTIAS   + CASE WHEN v_mode = 'TODOS' THEN NVL(R_GARANTIAS_DELTA,0) ELSE 0 END)
          ) / v_patrimonio, 6)
        ELSE 0 END AS PORC_CONSUMO
    FROM (
        SELECT
            sg.GCC_GROUP_TSI_ID,
            sg.GCC_GROUP_NAME,
            NVL(SUM(sg.CARTERA),0)         AS CARTERA,
            NVL(SUM(sg.GTIA_TECNICA),0)    AS GTIA_TECNICA,
            NVL(SUM(sg.GTIA_FINANCIERA),0) AS GTIA_FINANCIERA,
            NVL(SUM(sg.DERIVADOS),0)       AS DERIVADOS,
            NVL(SUM(sg.PROVISIONES),0)     AS PROVISIONES,
            NVL(SUM(sg.GARANTIAS),0)       AS GARANTIAS
        FROM DEHTGEMO.SIMULADORFR_GE sg
        WHERE sg.PENUMDOC = p_PENUMDOC_U
        GROUP BY sg.GCC_GROUP_TSI_ID, sg.GCC_GROUP_NAME
    ) g;

    DBMS_OUTPUT.PUT_LINE('Proceso completado con éxito');
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
END;
