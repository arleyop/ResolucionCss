next: (simulations: SimulatorSimulatedCustomer[]) => {
  // clonar grupos originales
  const cloneGroups: TableGroup[] = this.tableOriginalGroups.map(g => ({
    grupo: g.grupo,
    nombre: g.nombre,
    data: g.data.map(item => ({ ...item })),
  }));

  simulations.forEach(element => {
    // buscar grupo por gccgroupid
    const group = cloneGroups.find(g => g.grupo === element.gccgroupid);
    if (group && group.data.length > 0) {
      // reemplazar solo la primera fila del grupo
      group.data[0] = {
        ...group.data[0],
        Portfolio: element.cartera,
        Derivatives: element.derivados,
        NetExposure: element.exposicionNeta,
        Guarantees: element.garantia,
        TechnicalGuarantee: element.gtiaTecnica,
        FinancialGuarantee: element.gtiaFinanciera,
        Consumption: element.porcConsumo,
        TotalExposure: element.totalExposicion,
      };
    }
    // si no existe el grupo → se ignora
  });

  this.tableNewGroups = cloneGroups;
  this.switchDataSource(false);

  swal('Simulación exitosa', 'La simulación de los datos del cliente ha sido exitosa.', 'success');
},
