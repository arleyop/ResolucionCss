createSimulation(simulatorRequest: SimulatorRequest): Observable<SimulatorSimulatedCustomer[]> {
  const url = `${this.endpoint}/ejecutar-simulador`;
  return new Observable<SimulatorSimulatedCustomer[]>((subscriber) => {
    this.http.post<JSend>(url, simulatorRequest).subscribe({
      next: (response: JSend) => {
        if (response.status === 'success') {
          if (!response.data || response.data.length === 0) {
            subscriber.error('No se encontraron datos de simulación');
            return;
          }

          // Convertimos todo el arreglo a instancias de SimulatorSimulatedCustomer
          const simulations: SimulatorSimulatedCustomer[] = response.data.map(
            (item: any) => {
              const sim = new SimulatorSimulatedCustomer();
              sim.gccgroupid = item.gccgroupid;
              sim.penumdoc = item.penumdoc;
              sim.penomper = item.penomper;
              sim.cartera = item.cartera;
              sim.gtiaTecnica = item.gtiaTecnica;
              sim.gtiaFinanciera = item.gtiaFinanciera;
              sim.derivados = item.derivados;
              sim.totalExposicion = item.totalExposicion;
              sim.provisiones = item.provisiones;
              sim.garantia = item.garantia;
              sim.exposicionNeta = item.exposicionNeta;
              sim.porcConsumo = item.porcConsumo;
              return sim;
            }
          );

          subscriber.next(simulations);
        } else {
          subscriber.error(response.message);
        }
      },
      error: (error: any) => {
        subscriber.error(error?.error?.message || 'Error en la simulación');
      },
      complete: () => {
        subscriber.complete();
      },
    });
  });
}
